name: Nightly zoning tile refresh

on:
  # Runs daily at 02:07 PT  (09:07 UTC all year; cron uses UTC)
  schedule:
    - cron: "7 9 * * *"
  workflow_dispatch:

jobs:
  bake-tiles:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # <- allow git push with GITHUB_TOKEN

    steps:
    # 1 ▸ Checkout repo (tiles repo)
    - uses: actions/checkout@v4
#      with:
#        persist-credentials: false   # we’ll push explicitly later

    # 2 ▸ Install GDAL + mbutil
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y gdal-bin python3-pip
        pip install --quiet mbutil

    # 3 ▸ Download latest zoning polygons (vector GeoJSON)
    - name: Fetch zoning polygons
      run: |
        curl -L -o zoning.geojson \
          "https://gisservices.surrey.ca/arcgis/rest/services/OpenData/MapServer/239/query?where=1=1&outFields=*&outSR=3857&f=geojson"
# … earlier steps unchanged (checkout, install gdal, fetch GeoJSON) …

    # 4 ▸ Re-project to Web Mercator GeoJSON (Tippecanoe wants EPSG:3857)
    - name: Reproject to Web Mercator
      run: |
        ogr2ogr -t_srs EPSG:3857 zoning3857.geojson zoning.geojson

    # 5 ▸ Build a single PMTiles vector file (zoom 10-18)
    - name: Generate PMTiles (vector)
      run: |
        sudo apt-get install -y tippecanoe
        tippecanoe -o zoning.pmtiles \
          -Z10 -z18 \
          --layer=zone \
          --drop-densest-as-needed \
          --no-feature-limit --no-tile-size-limit \
          zoning3857.geojson

    # 6 ▸ Commit & push the PMTiles if it changed
    - name: Commit & push tiles
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name  "Tile Bot"
        git config user.email "bot@users.noreply.github.com"
        git add zoning.pmtiles || true
        if ! git diff --cached --quiet; then
          git commit -m "Nightly PMTiles update $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push origin HEAD:main
        else
          echo "No tile changes to commit."
        fi
        
    # 8 ▸ Commit & push if tiles changed
    - name: Commit & push tiles
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name  "Tile Bot"
        git config user.email "bot@users.noreply.github.com"
        git add tiles || true

        # Only commit when there are staged changes
        if ! git diff --cached --quiet; then
          git commit -m "Nightly tile update $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push origin HEAD:main
        else
          echo "No tile changes to commit."
        fi
